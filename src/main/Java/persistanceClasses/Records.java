package persistanceClasses;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Records generated by hbm2java
 */
@Entity
@Table(name = "records", catalog = "c39melidatos")
public class Records implements java.io.Serializable {

	private Long idRecord;
	private String productId;
	private String descProduct;
	private Date dateRecord;
	private double sampleSize;
	private Set <Itemsquantitys> itemsquantityses = new HashSet(0);
	private Set <Statesdata>statesdatas = new HashSet(0);
	private Set <Publications>publicationses = new HashSet(0);
	private Set <Mercadopago>mercadopagos = new HashSet(0);
	private Set <Itemprices>itempriceses = new HashSet(0);
	private Set <Datestopquantitys>datestopquantityses = new HashSet(0);

	public Records() {
	}

	public Records(String productId, String descProduct, Date dateRecord,
			double sampleSize) {
		this.productId = productId;
		this.descProduct = descProduct;
		this.dateRecord = dateRecord;
		this.sampleSize = sampleSize;
	}

	public Records(String productId, String descProduct, Date dateRecord,
			double sampleSize, Set itemsquantityses, Set statesdatas,
			Set publicationses, Set mercadopagos, Set itempriceses,
			Set datestopquantityses) {
		this.productId = productId;
		this.descProduct = descProduct;
		this.dateRecord = dateRecord;
		this.sampleSize = sampleSize;
		this.itemsquantityses = itemsquantityses;
		this.statesdatas = statesdatas;
		this.publicationses = publicationses;
		this.mercadopagos = mercadopagos;
		this.itempriceses = itempriceses;
		this.datestopquantityses = datestopquantityses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idRecord", unique = true, nullable = false)
	public Long getIdRecord() {
		return this.idRecord;
	}

	public void setIdRecord(Long idRecord) {
		this.idRecord = idRecord;
	}

	@Column(name = "productId", nullable = false, length = 45)
	public String getProductId() {
		return this.productId;
	}

	public void setProductId(String productId) {
		this.productId = productId;
	}

	@Column(name = "descProduct", nullable = false, length = 45)
	public String getDescProduct() {
		return this.descProduct;
	}

	public void setDescProduct(String descProduct) {
		this.descProduct = descProduct;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dateRecord", nullable = false, length = 10)
	public Date getDateRecord() {
		return this.dateRecord;
	}

	public void setDateRecord(Date dateRecord) {
		this.dateRecord = dateRecord;
	}

	@Column(name = "sampleSize", nullable = false, precision = 22, scale = 0)
	public double getSampleSize() {
		return this.sampleSize;
	}

	public void setSampleSize(double sampleSize) {
		this.sampleSize = sampleSize;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "records")
	public Set <Itemsquantitys> getItemsquantityses() {
		return this.itemsquantityses;
	}

	public void setItemsquantityses(Set <Itemsquantitys> itemsquantityses) {
		this.itemsquantityses = itemsquantityses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "records")
	public Set <Statesdata> getStatesdatas() {
		return this.statesdatas;
	}

	public void setStatesdatas(Set <Statesdata> statesdatas) {
		this.statesdatas = statesdatas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "records")
	public Set <Publications> getPublicationses() {
		return this.publicationses;
	}

	public void setPublicationses(Set <Publications> publicationses) {
		this.publicationses = publicationses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "records")
	public Set <Mercadopago> getMercadopagos() {
		return this.mercadopagos;
	}

	public void setMercadopagos(Set <Mercadopago> mercadopagos) {
		this.mercadopagos = mercadopagos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "records")
	public Set <Itemprices> getItempriceses() {
		return this.itempriceses;
	}

	public void setItempriceses(Set <Itemprices> itempriceses) {
		this.itempriceses = itempriceses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "records")
	public Set <Datestopquantitys> getDatestopquantityses() {
		return this.datestopquantityses;
	}

	public void setDatestopquantityses(Set <Datestopquantitys> datestopquantityses) {
		this.datestopquantityses = datestopquantityses;
	}

}
